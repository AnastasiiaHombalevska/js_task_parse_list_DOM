function t(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=Array(e);r<e;r++)n[r]=t[r];return n}var e=document.querySelectorAll("li"),r=document.querySelector("ul"),n=((function(e){if(Array.isArray(e))return t(e)})(e)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(e)||function(e,r){if(e){if("string"==typeof e)return t(e,void 0);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return t(e,void 0)}}(e)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).map(function(t){return{name:t.innerText,position:t.getAttribute("data-position"),salary:t.getAttribute("data-salary"),age:t.getAttribute("data-age")}});function a(t){return parseFloat(t.replace(/[^0-9.-]+/g,""))}n.sort(function(t,e){var r=a(t.salary);return a(e.salary)-r}),n.map(function(t){return function(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(t){return Object.getOwnPropertyDescriptor(r,t).enumerable}))),n.forEach(function(e){var n;n=r[e],e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n})}return t}({},t)}),r.remove();var o=document.createElement("ul");n.forEach(function(t){var e=t.position,r=t.salary,n=t.age,a=document.createElement("li");a.innerText=t.name,a.setAttribute("data-position",e),a.setAttribute("data-salary",r),a.setAttribute("data-age",n),o.append(a)}),document.body.appendChild(o);
//# sourceMappingURL=index.03953321.js.map
